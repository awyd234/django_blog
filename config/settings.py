"""
Django settings for django_blog project.

Generated by 'django-admin startproject' using Django 1.10.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

from config.config_parse import get_value

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '6y$fpeh5x1904dk+bcj26hhhp@2eag9i%$#)(9j-c6w3kav-ml'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = get_value('others', 'allowed_host').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'blog',
    'accounts',
    'markdown2',
    'pygments',
    'userena',
    'guardian',
    'easy_thumbnails',
    'crispy_forms',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'userena.middleware.UserenaLocaleMiddleware',
    'django.contrib.sites.middleware.CurrentSiteMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'blog/templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

SITE_ID = 1

CRISPY_TEMPLATE_PACK = 'bootstrap3'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': get_value('mysql_blog', 'db'),
        'USER': get_value('mysql_blog', 'user'),
        'PASSWORD': get_value('mysql_blog', 'passwd'),
        'HOST': get_value('mysql_blog', 'host'),
        'PORT': get_value('mysql_blog', 'port'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
    'userena.backends.UserenaAuthenticationBackend',
    'guardian.backends.ObjectPermissionBackend',
    'django.contrib.auth.backends.ModelBackend',
)

# EMAIL_BACKENDS = 'django.core.mail.backends.dummy.EmailBackend'
# EMAIL_USE_TLS = True
EMAIL_HOST = get_value('email', 'host')
EMAIL_PORT = 587
EMAIL_HOST_USER = get_value('email', 'host_user')
EMAIL_HOST_PASSWORD = get_value('email', 'host_paswd')

ANONYMOUS_USER_ID = -1
AUTH_PROFILE_MODULE = 'accounts.UserProfile'
AUTH_USER_MODEL = 'accounts.User'
USERENA_SIGNIN_REDIRECT_URL = '/accounts/%(username)s/'
LOGIN_URL = '/accounts/signin/'
LOGOUT_URL = '/accounts/signout/'


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

# USERENA_LANGUAGE_FIELD = 'en-us'

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-cn'
# ugettext = lambda s: s
# LANGUAGES = (
#     ('en', ugettext('English')),
#     ('nl', ugettext('Dutch')),
#     ('fr', ugettext('French')),
#     ('pl', ugettext('Polish')),
#     ('pt', ugettext('Portugese')),
#     ('pt-br', ugettext('Brazilian Portuguese')),
#     ('es', ugettext('Spanish')),
#     ('el', ugettext('Greek')),
# )

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
# STATIC_ROOT = os.path.join(BASE_DIR, 'avatars/user')
STATIC_URL = '/static/'
STATICFILES = os.path.join(BASE_DIR, 'blog/static')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = 'media/'
#
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, 'avatars/user'),
# )
